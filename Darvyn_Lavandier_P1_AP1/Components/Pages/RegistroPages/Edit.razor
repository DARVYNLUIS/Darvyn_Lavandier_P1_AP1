@page "/Registro/Edit/{Id:int?}"
@using Darvyn_Lavandier_P1_AP1.Service
@using Darvyn_Lavandier_P1_AP1.Models
@inject RegistroService RegistroService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<PageTitle>Modificar Aporte</PageTitle>
<EditForm Model="Registro" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="card shadow-lg border-0 rounded" style="background-color: #f8f9fa;">
        <div class="card-header bg-primary text-white text-center">
            <h3><i class="fas fa-clipboard-list"></i> Editar Registro</h3>
        </div>

        <div class="card-body">
            <div class="mb-3">
                <label for="RegistroId" class="form-label">Registro ID:</label>
                <InputNumber @bind-Value="Registro.Id" class="form-control" disabled />
            </div>

            <div class="mb-3">
                <label for="Persona" class="form-label">Persona:</label>
                <InputText @bind-Value="Registro.Persona" class="form-control" />
                <ValidationMessage For="@(() => Registro.Persona)" />
            </div>

            <div class="mb-3">
                <label for="Observacion" class="form-label">Observación:</label>
                <InputText @bind-Value="Registro.Observacion" class="form-control" />
                <ValidationMessage For="@(() => Registro.Observacion)" />
            </div>

            <div class="mb-3">
                <label for="Monto" class="form-label">Monto:</label>
                <InputNumber @bind-Value="Registro.Monto" class="form-control" />
                <ValidationMessage For="@(() => Registro.Monto)" />
            </div>
        </div>

        <div class="card-footer bg-light d-flex justify-content-center mt-3">
            <div class="btn-group">
                <button type="button" class="btn btn-outline-primary ml-2" @onclick="Nuevo">
                    <span class="bi bi-plus"></span> Nuevo
                </button>
                <button type="submit" class="btn btn-outline-success ml-2">
                    <span class="bi bi-check-circle-fill"></span> Guardar
                </button>
                <a href="/Registro/Index/" class="btn btn-outline-danger">
                    <span class="bi bi-arrow-bar-left"></span> Volver
                </a>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }
    public Registros Registro { get; set; } = new Registros();
    private bool EsNuevoRegistro = true;

    protected override async Task OnParametersSetAsync()
    {
        try
        {
            await CargarRegistro();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al cargar el registro: {ex.Message}");
        }
    }

    private async Task CargarRegistro()
    {
        if (Id.HasValue && Id.Value > 0)
        {
            var registroEncontrado = await RegistroService.Buscar(Id.Value);
            if (registroEncontrado != null)
            {
                Registro = registroEncontrado;
                EsNuevoRegistro = false;
            }
            else
            {
                Registro = new Registros(); 
                EsNuevoRegistro = true;
            }
        }
        else
        {
            Nuevo();
        }

        StateHasChanged(); 
    }

    public void Nuevo()
    {
        Registro = new Registros();
        EsNuevoRegistro = true;
    }

    public async Task Guardar()
    {
        var guardo = await RegistroService.Guardar(Registro);
        if (guardo)
        {
            NavigationManager.NavigateTo("/Registro/Index", forceLoad: true);
        }
    }
}
