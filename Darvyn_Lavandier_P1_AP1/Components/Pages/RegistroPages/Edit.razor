@page "/Registro/Edit/{RegistroId:int}"
@using Darvyn_Lavandier_P1_AP1.Service
@using Darvyn_Lavandier_P1_AP1.Models
@inject RegistroService RegistroService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<PageTitle>Modificar Aporte</PageTitle>
<EditForm Model="Registro" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="card shadow-lg border-0 rounded" style="background-color: #f8f9fa;">
        <div class="card-header bg-primary text-white" style="text-align: center;">
            <h3> <i class="fas fa-clipboard-list"></i> Editar Registro</h3>
        </div>

        <div class="card-body">
            <div class="row">
                <div class="col-md-6 mb-3">
                    <label for="RegistroId" class="form-label">RegistroId:</label>
                    <div class="input-group">
                        <div style="width: 40%; height: 1em;">
                            <InputNumber @bind-Value="Registro.Id" class="form-control" style="font-size: 0.8em;" aria-describedby="BotonBuscar" disabled />
                        </div>
                    </div>
                </div>
            </div>

            <div class="mb-3">
                <label for="Nombres" class="form-label">Nombres:</label>
                <InputText @bind-Value="Registro.Persona" class="form-control" />
                <ValidationMessage For="@(() => Registro.Persona)" />
            </div>

            <div class="mb-3">
                <label for="Monto" class="form-label">Monto:</label>
                <InputNumber @bind-Value="Registro.Monto" class="form-control" />
                <ValidationMessage For="@(() => Registro.Monto)" />
            </div>

        </div>

        <div class="card-footer bg-light d-flex justify-content-center mt-3">
            <div class="btn-group">
                <button type="button" class="btn btn-outline-primary ml-2" @onclick="Nuevo"><span class="bi bi-plus"></span> Nuevo </button>
                <button type="submit" class="btn btn-outline-success ml-2"><span class="bi bi-check-circle-fill"></span> Guardar </button>
                <a type="button" href="/Registro/Index/" class="btn btn-outline-danger"><span class="bi bi-arrow-bar-left"></span> Volver </a>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int? RegistroId { get; set; }
    public Registros Registro { get; set; } = new Registros();
    private bool Existe = false;

    protected override async Task OnInitializedAsync()
    {
        if (RegistroId.HasValue)
        {
            Registro.Id = RegistroId.Value;
            await Buscar();
        }
    }

    public void Nuevo()
    {
        Registro = new Registros();
        Existe = false;
    }

    public async Task Buscar()
    {
        var registroEncontrado = await RegistroService.Buscar(Registro.Id);

        if (registroEncontrado != null)
        {
            Registro = registroEncontrado;
        }
    }

    public async Task<bool> Validar()
    {
        Existe = await RegistroService.Existe(Registro.Id, Registro.Persona);
        return !Existe;
    }

    public async Task Guardar()
    {
        if (!await Validar())
        {
            return;
        }

        var guardo = await RegistroService.Guardar(Registro);
        if (guardo)
        {
            Nuevo();
            NavigationManager.NavigateTo("/Registro/Index");
        }
    }
}